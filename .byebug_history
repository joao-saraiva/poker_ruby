c
equal_naip_values(@cards[0])
equal_naip_values(@cards[1])
c
equal_naip_values(@cards[1])
c
equal_naip_values(@cards[1])
equal_naip_values(@cards[0])
c
(cards_until - cards_values).empty?
c
(cards_until - cards_values).empty?
(cards_until - cards_values
cards_until - cards_values
cards_until- cards_values
cards_until- cards.values
cards_unti l- cards.values
cards_until-cards.values
cards_values.max
cards_values.min
cards_values
c
@round.table_cards.cards
@round
c
round
c
@value
c
VALUES.find_index(@value) + 2
VALUES.find_index(@value)
@value
c
@cards[0].value
@cards[0].naip=
@cards[0].naip
@cards.naip
@cards.@value
@cards
c
@cards[0]
@cards[0].value
c
@number
c
@number
c
@round
c
@round
c
"[#{@naip} | #{@value}]"
c
"[#{@naip} | #{@value}]"
c
"[#{@naip} | #{@value}]"
@value
@naip
c
to_flip_cards.each(&:formated_print).join(', ')
to_flip_cards
c
to_flip_cards
c
ap to_flip_cards
to_flip_cards
c
raise GemAmountError.new('you cant start without gems').msg
GemAmountError.new('you cant start without gems').msg
gems
